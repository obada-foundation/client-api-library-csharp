/*
 * OBADA API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: techops@obada.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Obada.Client.Client;
using Obada.Client.Api;
using Obada.Client.Model;

namespace Obada.Client.Test
{
    /// <summary>
    ///  Class for testing NFTApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class NFTApiTests
    {
        private NFTApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new NFTApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of NFTApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' NFTApi
            //Assert.IsInstanceOf(typeof(NFTApi), instance);
        }

        
        /// <summary>
        /// Test Mint
        /// </summary>
        [Test]
        public void MintTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //instance.Mint(key);
            
        }
        
        /// <summary>
        /// Test Nft
        /// </summary>
        [Test]
        public void NftTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //var response = instance.Nft(key);
            //Assert.IsInstanceOf(typeof(NFT), response, "response is NFT");
        }
        
        /// <summary>
        /// Test Send
        /// </summary>
        [Test]
        public void SendTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //SendNFTRequest sendNFTRequest = null;
            //instance.Send(key, sendNFTRequest);
            
        }
        
    }

}
