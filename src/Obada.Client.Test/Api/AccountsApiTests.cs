/*
 * OBADA API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: techops@obada.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Obada.Client.Client;
using Obada.Client.Api;
using Obada.Client.Model;

namespace Obada.Client.Test
{
    /// <summary>
    ///  Class for testing AccountsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AccountsApiTests
    {
        private AccountsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AccountsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AccountsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' AccountsApi
            //Assert.IsInstanceOf(typeof(AccountsApi), instance);
        }

        
        /// <summary>
        /// Test Balance
        /// </summary>
        [Test]
        public void BalanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Balance();
            //Assert.IsInstanceOf(typeof(AccountBalance), response, "response is AccountBalance");
        }
        
        /// <summary>
        /// Test CreateAccount
        /// </summary>
        [Test]
        public void CreateAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewAccountRequest newAccountRequest = null;
            //var response = instance.CreateAccount(newAccountRequest);
            //Assert.IsInstanceOf(typeof(Account), response, "response is Account");
        }
        
    }

}
