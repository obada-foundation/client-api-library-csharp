/*
 * OBADA API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: techops@obada.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Obada.Client.Client.OpenAPIDateConverter;

namespace Obada.Client.Model
{
    /// <summary>
    /// Obit checksum with logged data
    /// </summary>
    [DataContract]
    public partial class GenerateObitChecksumResponse :  IEquatable<GenerateObitChecksumResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GenerateObitChecksumResponse" /> class.
        /// </summary>
        /// <param name="checksum">Obit checksum.</param>
        /// <param name="computeLog">Log that contain captures from SDK.</param>
        public GenerateObitChecksumResponse(string checksum = default(string), string computeLog = default(string))
        {
            this.Checksum = checksum;
            this.ComputeLog = computeLog;
        }

        /// <summary>
        /// Obit checksum
        /// </summary>
        /// <value>Obit checksum</value>
        [DataMember(Name="checksum", EmitDefaultValue=false)]
        public string Checksum { get; set; }

        /// <summary>
        /// Log that contain captures from SDK
        /// </summary>
        /// <value>Log that contain captures from SDK</value>
        [DataMember(Name="compute_log", EmitDefaultValue=false)]
        public string ComputeLog { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GenerateObitChecksumResponse {\n");
            sb.Append("  Checksum: ").Append(Checksum).Append("\n");
            sb.Append("  ComputeLog: ").Append(ComputeLog).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GenerateObitChecksumResponse);
        }

        /// <summary>
        /// Returns true if GenerateObitChecksumResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of GenerateObitChecksumResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GenerateObitChecksumResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Checksum == input.Checksum ||
                    (this.Checksum != null &&
                    this.Checksum.Equals(input.Checksum))
                ) && 
                (
                    this.ComputeLog == input.ComputeLog ||
                    (this.ComputeLog != null &&
                    this.ComputeLog.Equals(input.ComputeLog))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Checksum != null)
                    hashCode = hashCode * 59 + this.Checksum.GetHashCode();
                if (this.ComputeLog != null)
                    hashCode = hashCode * 59 + this.ComputeLog.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
